{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","uniqueUsers","infoAboutUsers","infoAboutGroups","className","type","placeholder","id","onClick","token","document","getElementById","value","alert","fetch","method","headers","body","JSON","stringify","then","r","ok","json","data","url","task_id","console","log","updateProgress","status_url","percent","parseInt","current","total","innerText","result","messages","items","profiles","groups","i","length","message","hasOwnProperty","peer_id","push","keys","Object","conversations","opt","createElement","intKey","innerHTML","getById","first_name","last_name","name","appendChild","setTimeout","getAllMessages","onChange","e","root","target","processMessage","k","ava","text","from_id","photo_50","messageElement","avaElement","src","rightContent","content","nameElement","timeElement","unix","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","formatTime","textElement","clearFix","photosElement","audioMessagesElement","attachments","attachment","imageElement","imax","sizes","photo","maxWidth","width","j","height","audioElement","source","controls","audio_message","link_ogg","el","sticker","images","fwdMessagesElement","n","fwd_messages","fwdMessageElement","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c1529cff.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  let uniqueUsers = {};\n  let infoAboutUsers = [];\n  let infoAboutGroups = [];\n\n  return (\n      <div className=\"App\">\n        <input type=\"text\" placeholder=\"access token\" id=\"token\"/>\n        <button onClick={firstStep}>Go</button>\n        <div id=\"progress\">\n          0%\n        </div>\n        <select name=\"conversations\" id=\"conversations-select\" onChange={selected}>\n\n        </select>\n        <div id=\"messages\">\n\n        </div>\n      </div>\n  );\n\n  function firstStep() {\n    const token = document.getElementById(\"token\").value;\n    if (token === \"\"){\n      alert(\"Token is empty\")\n    }\n    else {\n      getAllMessages(token)\n    }\n  }\n\n  function getAllMessages(token) {\n    fetch(\"https://guarded-lowlands-65115.herokuapp.com/getAllMessages\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({token: token})\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(data=> {\n          let url = \"https://guarded-lowlands-65115.herokuapp.com/status/\" + data.task_id;\n          console.log(url);\n          updateProgress(url);\n        })\n      }\n    })\n  }\n\n  function updateProgress(status_url) {\n    fetch(status_url).then(r => {\n      if (r.ok) {\n        console.log(status_url)\n        r.json().then(data => {\n          console.log(data)\n          let percent = parseInt(data.current * 100 / data.total)\n          let progressBar = document.getElementById('progress')\n          progressBar.innerText = percent + '%'\n          if (data['state'] !== 'PENDING' && data['state'] !== 'PROGRESS') {\n            if ('result' in data) {\n              let json = data.result;\n              let messages = json.items;\n\n              infoAboutUsers = json.profiles;\n              infoAboutGroups = json.groups;\n\n              for (let i = 0; i < messages.length; i++) {\n                let message = messages[i];\n                if (uniqueUsers.hasOwnProperty(message.peer_id)) {\n                  uniqueUsers[message.peer_id].push(message);\n                } else {\n                  uniqueUsers[message.peer_id] = [message];\n                }\n              }\n              let keys = Object.keys(uniqueUsers);\n\n              let conversations = document.getElementById(\"conversations-select\");\n              for (let i = 0; i < keys.length; i++) {\n                let opt = document.createElement(\"option\");\n                opt.value = keys[i];\n                let intKey = parseInt(keys[i]);\n                if (intKey> 0 && intKey < 2000000000) {\n                  opt.innerHTML = getById(intKey).first_name + \" \" + getById(intKey).last_name;\n                } else if (intKey < 0){\n                  opt.innerHTML = getById(intKey).name;\n                } else {\n                  opt.innerHTML = keys[i];\n                }\n                conversations.appendChild(opt);\n              }\n            }\n          } else {\n            setTimeout(function() {\n              updateProgress(status_url)\n            }, 2000)\n          }\n        })\n      }\n    })\n  }\n\n\n\n  //\n  // let messages = json.items;\n  //\n  // infoAboutUsers = json.profiles;\n  // infoAboutGroups = json.groups;\n  //\n  // for (let i = 0; i < messages.length; i++) {\n  //     let message = messages[i];\n  //     if (uniqueUsers.hasOwnProperty(message.peer_id)) {\n  //         uniqueUsers[message.peer_id].push(message);\n  //     } else {\n  //         uniqueUsers[message.peer_id] = [message];\n  //     }\n  // }\n  // let keys = Object.keys(uniqueUsers);\n  //\n  // let conversations = document.getElementById(\"conversations-select\");\n  // for (let i = 0; i < keys.length; i++) {\n  //     let opt = document.createElement(\"option\");\n  //     opt.value = keys[i];\n  //     let intKey = parseInt(keys[i]);\n  //     if (intKey> 0 && intKey < 2000000000) {\n  //         opt.innerHTML = getById(intKey).first_name + \" \" + getById(intKey).last_name;\n  //     } else if (intKey < 0){\n  //         opt.innerHTML = getById(intKey).name;\n  //     } else {\n  //         opt.innerHTML = keys[i];\n  //     }\n  //     conversations.appendChild(opt);\n  // }\n\n\n  function getById(id) {\n    if (id > 0 && id < 2000000000) {\n      for (let k = 0; k < infoAboutUsers.length; k++)\n        if (infoAboutUsers[k].id === id)\n          return  infoAboutUsers[k]\n    } else if (id < 0){\n      for (let k = 0; k < infoAboutGroups.length; k++)\n        if (parseInt(infoAboutGroups[k].id) === -id)\n          return infoAboutGroups[k]\n\n    }\n    return id;\n  }\n\n  function formatTime(unix) {\n    let date = new Date(unix * 1000);\n    let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    return  date.getDate() + ' ' + months[date.getMonth()] + ' ' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n  }\n  function processMessage (message) {\n    if (!message) {\n      return \"\"\n    }\n    let text = message.text;\n    let intKey = message.from_id;\n    let ava, name;\n    if (intKey> 0 && intKey < 2000000000) {\n      name = getById(intKey).first_name + \" \" + getById(intKey).last_name;\n      ava = getById(intKey).photo_50;\n    } else if (intKey < 0){\n      name = getById(intKey).name;\n      ava = getById(intKey).photo_50;\n    }\n\n    let messageElement = document.createElement(\"div\");\n    messageElement.className = \"message\";\n\n    let avaElement = document.createElement(\"img\");\n    avaElement.className = \"ava\";\n    avaElement.src = ava;\n\n\n    let rightContent = document.createElement(\"div\");\n    rightContent.className = \"right-content\";\n\n    let content = document.createElement(\"div\");\n    content.className = \"content\";\n\n    let nameElement = document.createElement(\"div\");\n    nameElement.className = \"name\";\n    nameElement.innerText = name;\n\n    let timeElement = document.createElement(\"div\");\n    timeElement.className = \"time\";\n    timeElement.innerText = formatTime(message.date);\n\n    let textElement = document.createElement(\"div\");\n    textElement.className = \"text\"\n    textElement.innerText = text;\n\n\n    let clearFix = document.createElement(\"div\");\n    clearFix.className = \"clearFix\";\n\n    let photosElement = document.createElement(\"div\");\n    photosElement.className = \"photos\";\n\n    let audioMessagesElement = document.createElement(\"div\");\n    audioMessagesElement.className = \"audio-messages\";\n\n    for (let k = 0; k < message.attachments.length; k++) {\n      let attachment = message.attachments[k];\n      if (attachment.type === \"photo\") {\n        let imageElement = document.createElement(\"img\");\n\n        let imax = 0;\n        let sizes = attachment.photo.sizes;\n        let maxWidth = sizes[0].width;\n\n        for (let j = 0; j < sizes.length; j++) {\n          if (sizes[j].width > maxWidth) {\n            maxWidth = sizes[j].width;\n            imax = j;\n          }\n        }\n\n        let url = sizes[imax].url;\n        imageElement.src = url;\n        imageElement.height = 400;\n        photosElement.appendChild(imageElement);\n      }\n      if (attachment.type === \"audio_message\") {\n        let audioElement = document.createElement(\"audio\");\n        let source = document.createElement(\"source\");\n\n        audioElement.controls = true;\n        source.src = attachment.audio_message.link_ogg;\n        audioElement.appendChild(source);\n        audioMessagesElement.appendChild(audioElement);\n\n      }\n      if (attachment.type === \"sticker\") {\n        let el = document.createElement(\"img\");\n        el.src = attachment.sticker.images[1].url;\n        photosElement.appendChild(el);\n      }\n    }\n\n    let fwdMessagesElement = document.createElement(\"div\")\n    fwdMessagesElement.className = \"fwd-messages\"\n    if (message.hasOwnProperty(\"fwd_messages\")) {\n      for (let n = 0; n < message.fwd_messages.length; n++) {\n        let fwdMessageElement  = document.createElement(\"div\");\n        fwdMessageElement.appendChild(processMessage(message.fwd_messages[n]));\n        fwdMessagesElement.appendChild(fwdMessageElement);\n      }\n\n    }\n\n\n    content.appendChild(textElement);\n    content.appendChild(photosElement);\n    content.appendChild(audioMessagesElement);\n    content.appendChild(fwdMessagesElement);\n\n    rightContent.appendChild(nameElement);\n    rightContent.appendChild(timeElement);\n    rightContent.appendChild(content);\n\n    messageElement.appendChild(avaElement);\n    messageElement.appendChild(rightContent);\n    messageElement.appendChild(clearFix);\n\n    return messageElement;\n\n  }\n  function selected(e) {\n    let root = document.getElementById(\"messages\");\n    root.innerHTML = \"\";\n    let messages = uniqueUsers[e.target.value];\n    for (let i = 0; i < messages.length; i++) {\n      root.appendChild(processMessage(messages[i]))\n    }\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}